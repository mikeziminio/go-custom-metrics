version: '3'

env:
  BIN: "{{.PWD}}/bin"

tasks:
  build:
    desc: Build all
    cmds:
      - "go build -o $BIN/server ./cmd/server"
      - "go build -o $BIN/agent ./cmd/agent"

  server:
    desc: Run server, specify args after --
    cmds:
      - "go build -o $BIN/server ./cmd/server"
      - "$BIN/server {{.CLI_ARGS}}"

  agent:
    desc: Run agent, specify args after --
    cmds:
      - "go build -o $BIN/agent ./cmd/agent"
      - "$BIN/agent {{.CLI_ARGS}}"

  prepare-yandex:
    desc: Download and build yandex tests and linters
    cmds:
      - "git clone git@github.com:Yandex-Practicum/go-autotests.git ./tmp-go-autotests"
      - "(cd ./tmp-go-autotests && go test -c -o $BIN/metricstest ./cmd/metricstest)"
      - "(cd ./tmp-go-autotests && go build -o $BIN/statictest ./cmd/statictest)"
      - "(cd ./tmp-go-autotests && go build -o $BIN/random ./cmd/random)"
      - "rm -r -f ./tmp-go-autotests"

  test-all:
    desc: Run all tests
    vars:
      SERVER_PORT:
        sh: $BIN/random unused-port
      TEMP_FILE:
        sh: $BIN/random tempfile
    cmds:
      # - "go test -race ./..."
      - "task build"
      # - "$BIN/metricstest -test.v -test.run=^TestIteration1$ -binary-path=$BIN/server"
      # - "$BIN/metricstest -test.v -test.run=^TestIteration2[AB]*$ -source-path=. -agent-binary-path=$BIN/agent"
      # - "$BIN/metricstest -test.v -test.run=^TestIteration3[AB]*$ -source-path=. -agent-binary-path=$BIN/agent -binary-path=$BIN/server"
      # - "SERVER_PORT={{.SERVER_PORT}} ADDRESS=localhost:{{.SERVER_PORT}} TEMP_FILE={{.TEMP_FILE}} $BIN/metricstest -test.v -test.run=^TestIteration4$ -agent-binary-path=$BIN/agent -binary-path=$BIN/server -server-port={{.SERVER_PORT}} -source-path=."
      # - "SERVER_PORT={{.SERVER_PORT}} ADDRESS=localhost:{{.SERVER_PORT}} TEMP_FILE={{.TEMP_FILE}} $BIN/metricstest -test.v -test.run=^TestIteration5$ -agent-binary-path=$BIN/agent -binary-path=$BIN/server -server-port={{.SERVER_PORT}} -source-path=."
      # - "SERVER_PORT={{.SERVER_PORT}} ADDRESS=localhost:{{.SERVER_PORT}} TEMP_FILE={{.TEMP_FILE}} $BIN/metricstest -test.v -test.run=^TestIteration6$ -agent-binary-path=$BIN/agent -binary-path=$BIN/server -server-port={{.SERVER_PORT}} -source-path=."
      # - "SERVER_PORT=8080 ADDRESS=localhost:8080 TEMP_FILE={{.TEMP_FILE}} $BIN/metricstest -test.v -test.run=^TestIteration7$ -agent-binary-path=$BIN/agent -binary-path=$BIN/server -server-port=8080 -source-path=."
      # - "SERVER_PORT={{.SERVER_PORT}} ADDRESS=localhost:{{.SERVER_PORT}} TEMP_FILE={{.TEMP_FILE}} $BIN/metricstest -test.v -test.run=^TestIteration8$ -agent-binary-path=$BIN/agent -binary-path=$BIN/server -server-port={{.SERVER_PORT}} -source-path=."
      - "SERVER_PORT={{.SERVER_PORT}} ADDRESS=localhost:{{.SERVER_PORT}} TEMP_FILE={{.TEMP_FILE}} $BIN/metricstest -test.v -test.run=^TestIteration9$ -agent-binary-path=$BIN/agent -binary-path=$BIN/server -file-storage-path={{.TEMP_FILE}} -server-port={{.SERVER_PORT}} -source-path=."

  test:
    desc: Run local unit tests
    cmds:
      - "go test -race ./..."

  fmt:
    desc: Format and fix imports
    cmds:
      - "gofmt -w ."
      - "goimports -w -local \"github.com/mikeziminio/go-custom-metrics\" ."

  prepare-lint:
    desc: Install golangci-lint and nilaway, verify golangci-lint config
    cmds:
      - "GOBIN=$BIN go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.4.0"
      - "GOBIN=$BIN go install go.uber.org/nilaway/cmd/nilaway@latest"
      - "$BIN/golangci-lint cache clean"
      - "$BIN/golangci-lint config verify"

  lint:
    desc: Run yandex and local linters
    cmds:
      - "go vet -vettool=$BIN/statictest ./..."
      - "$BIN/golangci-lint run -c .golangci.yml"
      - "$BIN/nilaway ./cmd/server"
      - "$BIN/nilaway ./cmd/agent"

  mockery:
    desc: Run mockery - update mock files
    cmds:
      - mockery

  default:
    cmds:
      - "task -l"
      - "echo Bin directory: $BIN"
    silent: true
